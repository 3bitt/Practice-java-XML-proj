//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.01.14 at 03:39:28 PM CET 
//


package pl.edu.wit.jpa.dao.companyB.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for customer complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="customer">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *         &lt;element name="type" type="{firmaB}customerType"/>
 *         &lt;element name="personData" type="{firmaB}personData"/>
 *         &lt;element name="companyData" type="{firmaB}companyData"/>
 *         &lt;element name="contactData" type="{firmaB}contactData"/>
 *         &lt;element name="address" type="{firmaB}address" maxOccurs="unbounded"/>
 *         &lt;element name="account" type="{firmaB}account" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "customer", propOrder = {
    "id",
    "type",
    "personData",
    "companyData",
    "contactData",
    "address",
    "account"
})
@Entity(name = "CbCustomer")
@Table(name = "CBCUSTOMER")
@Inheritance(strategy = InheritanceType.JOINED)
public class CbCustomer
    implements Serializable, Equals, HashCode
{

    protected long id;
    @XmlElement(required = true)
    protected CbCustomerType type;
    @XmlElement(required = true)
    protected CbPersonData personData;
    @XmlElement(required = true)
    protected CbCompanyData companyData;
    @XmlElement(required = true)
    protected CbContactData contactData;
    @XmlElement(required = true)
    protected List<CbAddress> address;
    @XmlElement(required = true)
    protected List<CbAccount> account;

    /**
     * Gets the value of the id property.
     * 
     */
    @Id
    @Column(name = "id", scale = 0)
    public long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     */
    public void setId(long value) {
        this.id = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link CbCustomerType }
     *     
     */
    @Basic
    @Column(name = "TYPE_", length = 255)
    @Enumerated(EnumType.STRING)
    public CbCustomerType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link CbCustomerType }
     *     
     */
    public void setType(CbCustomerType value) {
        this.type = value;
    }

    /**
     * Gets the value of the personData property.
     * 
     * @return
     *     possible object is
     *     {@link CbPersonData }
     *     
     */
    @ManyToOne(targetEntity = CbPersonData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERSONDATA_CBCUSTOMER_HJID")
    public CbPersonData getPersonData() {
        return personData;
    }

    /**
     * Sets the value of the personData property.
     * 
     * @param value
     *     allowed object is
     *     {@link CbPersonData }
     *     
     */
    public void setPersonData(CbPersonData value) {
        this.personData = value;
    }

    /**
     * Gets the value of the companyData property.
     * 
     * @return
     *     possible object is
     *     {@link CbCompanyData }
     *     
     */
    @ManyToOne(targetEntity = CbCompanyData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMPANYDATA_CBCUSTOMER_HJID")
    public CbCompanyData getCompanyData() {
        return companyData;
    }

    /**
     * Sets the value of the companyData property.
     * 
     * @param value
     *     allowed object is
     *     {@link CbCompanyData }
     *     
     */
    public void setCompanyData(CbCompanyData value) {
        this.companyData = value;
    }

    /**
     * Gets the value of the contactData property.
     * 
     * @return
     *     possible object is
     *     {@link CbContactData }
     *     
     */
    @ManyToOne(targetEntity = CbContactData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTACTDATA_CBCUSTOMER_HJID")
    public CbContactData getContactData() {
        return contactData;
    }

    /**
     * Sets the value of the contactData property.
     * 
     * @param value
     *     allowed object is
     *     {@link CbContactData }
     *     
     */
    public void setContactData(CbContactData value) {
        this.contactData = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the address property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddress().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CbAddress }
     * 
     * 
     */
    @OneToMany(targetEntity = CbAddress.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ADDRESS_CBCUSTOMER_ID")
    public List<CbAddress> getAddress() {
        if (address == null) {
            address = new ArrayList<CbAddress>();
        }
        return this.address;
    }

    /**
     * 
     * 
     */
    public void setAddress(List<CbAddress> address) {
        this.address = address;
    }

    /**
     * Gets the value of the account property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the account property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccount().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CbAccount }
     * 
     * 
     */
    @OneToMany(targetEntity = CbAccount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ACCOUNT_CBCUSTOMER_ID")
    public List<CbAccount> getAccount() {
        if (account == null) {
            account = new ArrayList<CbAccount>();
        }
        return this.account;
    }

    /**
     * 
     * 
     */
    public void setAccount(List<CbAccount> account) {
        this.account = account;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CbCustomer)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CbCustomer that = ((CbCustomer) object);
        {
            long lhsId;
            lhsId = (true?this.getId(): 0L);
            long rhsId;
            rhsId = (true?that.getId(): 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            CbCustomerType lhsType;
            lhsType = this.getType();
            CbCustomerType rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            CbPersonData lhsPersonData;
            lhsPersonData = this.getPersonData();
            CbPersonData rhsPersonData;
            rhsPersonData = that.getPersonData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "personData", lhsPersonData), LocatorUtils.property(thatLocator, "personData", rhsPersonData), lhsPersonData, rhsPersonData)) {
                return false;
            }
        }
        {
            CbCompanyData lhsCompanyData;
            lhsCompanyData = this.getCompanyData();
            CbCompanyData rhsCompanyData;
            rhsCompanyData = that.getCompanyData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companyData", lhsCompanyData), LocatorUtils.property(thatLocator, "companyData", rhsCompanyData), lhsCompanyData, rhsCompanyData)) {
                return false;
            }
        }
        {
            CbContactData lhsContactData;
            lhsContactData = this.getContactData();
            CbContactData rhsContactData;
            rhsContactData = that.getContactData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactData", lhsContactData), LocatorUtils.property(thatLocator, "contactData", rhsContactData), lhsContactData, rhsContactData)) {
                return false;
            }
        }
        {
            List<CbAddress> lhsAddress;
            lhsAddress = (((this.address!= null)&&(!this.address.isEmpty()))?this.getAddress():null);
            List<CbAddress> rhsAddress;
            rhsAddress = (((that.address!= null)&&(!that.address.isEmpty()))?that.getAddress():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            List<CbAccount> lhsAccount;
            lhsAccount = (((this.account!= null)&&(!this.account.isEmpty()))?this.getAccount():null);
            List<CbAccount> rhsAccount;
            rhsAccount = (((that.account!= null)&&(!that.account.isEmpty()))?that.getAccount():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "account", lhsAccount), LocatorUtils.property(thatLocator, "account", rhsAccount), lhsAccount, rhsAccount)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            long theId;
            theId = (true?this.getId(): 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            CbCustomerType theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            CbPersonData thePersonData;
            thePersonData = this.getPersonData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "personData", thePersonData), currentHashCode, thePersonData);
        }
        {
            CbCompanyData theCompanyData;
            theCompanyData = this.getCompanyData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companyData", theCompanyData), currentHashCode, theCompanyData);
        }
        {
            CbContactData theContactData;
            theContactData = this.getContactData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactData", theContactData), currentHashCode, theContactData);
        }
        {
            List<CbAddress> theAddress;
            theAddress = (((this.address!= null)&&(!this.address.isEmpty()))?this.getAddress():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            List<CbAccount> theAccount;
            theAccount = (((this.account!= null)&&(!this.account.isEmpty()))?this.getAccount():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "account", theAccount), currentHashCode, theAccount);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
